module Homework where

-- Стоянов Дима

-- Задание:
-- Написать функцию preHigher :: Ord a => [a] -> [Int], которая по заданному списку элементов
-- выдает список индексов тех из них, которые строго меньше следующего.
-- Например, в числовом списке [1, 2.2, 2.1, 3.14, 2.7, 1.618] числа,
-- меньшие следующего в списке - это 1 и 2.1,
-- поэтому вызов preHigher [1, 2.2, 2.1, 3.14, 2.7, 1.618]
-- должен выдать список [0, 2] - список индексов этих элементов.


-- Делаем список троек из 3 списков - исходного списка, исхного без головы и индексов.
-- Отсеиваем элементы, у которых предыдущий элемент не строго меньше следующего (сравнивая 1-ый и 2-ой элемент тройки).
-- Прервращаем список троек в список индексов.

preHigher :: Ord a => [a] -> [Int]
preHigher l =  map (\x -> sel3 x) $ filter (\x ->  sel1 x < sel2 x) $  zip3 l (tail l) [0..] where
    sel1 (a,b,c) = a
    sel2 (a,b,c) = b
    sel3 (a,b,c) = c


-- Тесты
main = [
        preHigher [1, 2.2, 2.1, 3.14, 2.7, 1.618] == [0,2],
        preHigher "abzejlm" == [0,1, 3, 4, 5],
        preHigher [-5,-3,0,3,6,11] == [0, 1, 2, 3, 4],
        preHigher [10, 5, 3, -1, -10] == [],
        preHigher [17, 3, 34, -21, 16, -100, 19, 14] == [1, 3, 5]
       ]
